- name: Creating cert directory on node-2
  ansible.builtin.file:
    path: '{{ ca }}'
    state: directory
    owner: root
    group: elasticsearch
    mode: 755

- name: Copy cert file from node-1 to node-2
  ansible.builtin.copy:
    src: '/home/mahesh_hemke24/{{ item.src }}'
    dest: '{{ ca }}/caa.crt'
    owner: root
    group: elasticsearch
    mode: '644'
  with_items:
    - { src: caa.crt , dest: '{{ ca }}/caa.crt' }
    - { src: caa.key , dest: '{{ ca }}/caa.key' }
    - { src: elastic-stack-ca.p12 , dest: '{{ certs_dir }}/elastic-stack-ca.p12' }

- name: Service stop
  service:
    name: elasticsearch 
    state: stopped

### Generate a new certificate for the transport layer
- name: Import the newly created CA certificate into the Elasticsearch truststore - Node-2
  ansible.builtin.expect:
    command: /usr/share/elasticsearch/bin/elasticsearch-certutil cert --ca-cert {{ certs_dir }}/ca/caa.crt --ca-key {{ certs_dir }}/ca/caa.key
    echo: true
    responses:
      'Please enter the desired output file(.*)': '{{ els_cert }}'
      'Enter password for(.*)': '{{ elastic_pass }}'
      
- name: Remove the existing keystore values for the default transport keystore and truststore
  community.elastic.elastic_keystore:
    name: '{{ item }}'
    state: absent
  with_items:
    - xpack.security.transport.ssl.keystore.secure_password
    - xpack.security.transport.ssl.truststore.secure_password

- name: Add the existing keystore values for the default transport keystore and truststore
  community.elastic.elastic_keystore:
    name: '{{ item }}'
    value: '{{ elastic_pass }}'
  with_items:
    - xpack.security.transport.ssl.keystore.secure_password
    - xpack.security.transport.ssl.truststore.secure_password