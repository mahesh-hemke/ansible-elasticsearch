#### Creating Keys and certificates for Kibana
- name: Check that the elastic-certificates.p12 exists
  stat:
    path: '{{ kibana_zip }}'
  register: stat_result

- name: Generating certificate bundle for the Kibana server
  ansible.builtin.expect:
    command:  /usr/share/elasticsearch/bin/elasticsearch-certutil cert --name kibana-server --ca-cert {{ ca }}/ca.crt --ca-key {{ ca }}/ca.key  --dns {{ els_node_5 }} --ip {{ els_node_5_ip }} --pem
    echo: true
    responses:
      'Please enter the desired output file(.*)': 'kibana-cert-bundle.zip'
  when: not stat_result.stat.exists

### Unzip the file
- name: Unarchive a kibana-cert-bundle.zip file
  ansible.builtin.unarchive:
    src: '{{ els_dir }}/kibana-cert-bundle.zip'
    dest: '{{ els_dir }}'
    remote_src: yes
    mode: '750'

- name: Copy elasticsearch-ca.pem,cert,key file to kibana directory
  ansible.builtin.copy:
    src: '{{ els_dir }}/kibana-server/kibana-server.crt'
    dest: '{{ kibana_ca }}'
    owner: root
    group: kibana
    mode: '640'
    remote_src: yes
  with_items:
    - { src: '{{ els_dir }}/kibana-server/kibana-server.crt' , dest: '{{ kibana_cert }}' }
    - { src: '{{ els_dir }}/kibana-server/kibana-server.key' , dest: '{{ kibana_key }}' }
    - { src: '{{ els_dir }}/kibana/elasticsearch-ca.pem' , dest: '{{ kibana_ca }}' }

- name: Modifying kibana.yml file on kibana node {{ ansible_hostname }}
  template:
    src: templates/kibana.j2
    dest: /etc/kibana/kibana.yml
  notify: Kbn_restart

- name: Flush the handlers
  ansible.builtin.meta: flush_handlers

### Reset users password
- name: Reseting elastic and kibana_system users passwd {{ ansible_hostname }}
  ansible.builtin.expect:
    command: /usr/share/elasticsearch/bin/elasticsearch-reset-password -u {{ item }} -i
    echo: true
    responses:
      'Please confirm that you would like to continue(.*)': 'y'
      'Enter password for(.*)': '{{ elastic_pass }}'
      'Re-enter password for(.*)': '{{ elastic_pass }}'
  with_items:
    - elastic
    - kibana_system